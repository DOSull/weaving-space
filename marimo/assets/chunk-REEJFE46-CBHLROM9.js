import{_ as t,l as e,d as a,T as r,V as i,S as s,u as n,W as l,X as d,Y as o,i as h}from"./mermaid-6hHa3B5H.js";import{s as c}from"./transform-BZgIUWgO.js";import{l as y,k as p}from"./step-CjxFKgSe.js";var g=t(((t,e,a,r)=>{e.forEach((e=>{x[e](t,a,r)}))}),"insertMarkers"),x={extension:t(((t,a,r)=>{e.trace("Making markers for ",r),t.append("defs").append("marker").attr("id",r+"_"+a+"-extensionStart").attr("class","marker extension "+a).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),t.append("defs").append("marker").attr("id",r+"_"+a+"-extensionEnd").attr("class","marker extension "+a).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")}),"extension"),composition:t(((t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionStart").attr("class","marker composition "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionEnd").attr("class","marker composition "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")}),"composition"),aggregation:t(((t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationStart").attr("class","marker aggregation "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationEnd").attr("class","marker aggregation "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")}),"aggregation"),dependency:t(((t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyStart").attr("class","marker dependency "+e).attr("refX",6).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyEnd").attr("class","marker dependency "+e).attr("refX",13).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")}),"dependency"),lollipop:t(((t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopStart").attr("class","marker lollipop "+e).attr("refX",13).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6),t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopEnd").attr("class","marker lollipop "+e).attr("refX",1).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6)}),"lollipop"),point:t(((t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-pointEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",6).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-pointStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",4.5).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")}),"point"),circle:t(((t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-circleEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-circleStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")}),"circle"),cross:t(((t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-crossEnd").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-crossStart").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")}),"cross"),barb:t(((t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")}),"barb")},f=g;function u(t,e){e&&t.attr("style",e)}function w(t){const e=c(document.createElementNS("http://www.w3.org/2000/svg","foreignObject")),a=e.append("xhtml:div"),r=t.label,i=t.isNode?"nodeLabel":"edgeLabel",s=a.append("span");return s.html(r),u(s,t.labelStyle),s.attr("class",i),u(a,t.labelStyle),a.style("display","inline-block"),a.style("white-space","nowrap"),a.attr("xmlns","http://www.w3.org/1999/xhtml"),e.node()}t(u,"applyStyle"),t(w,"addHtmlLabel");var b=t(((t,i,s,n)=>{let l=t||"";if("object"==typeof l&&(l=l[0]),r(a().flowchart.htmlLabels)){l=l.replace(/\\n|\n/g,"<br />"),e.debug("vertexText"+l);return w({isNode:n,label:d(o(l)),labelStyle:i.replace("fill:","color:")})}{const t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("style",i.replace("color:","fill:"));let e=[];e="string"==typeof l?l.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(l)?l:[];for(const a of e){const e=document.createElementNS("http://www.w3.org/2000/svg","tspan");e.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),e.setAttribute("dy","1em"),e.setAttribute("x","0"),s?e.setAttribute("class","title-row"):e.setAttribute("class","row"),e.textContent=a.trim(),t.appendChild(e)}return t}}),"createLabel"),m=t((async(e,s,n,l)=>{const d=a();let y;const p=s.useHtmlLabels||r(d.flowchart.htmlLabels);y=n||"node default";const g=e.insert("g").attr("class",y).attr("id",s.domId||s.id),x=g.insert("g").attr("class","label").attr("style",s.labelStyle);let f;f=void 0===s.labelText?"":"string"==typeof s.labelText?s.labelText:s.labelText[0];const u=x.node();let w;w="markdown"===s.labelType?i(x,h(o(f),d),{useHtmlLabels:p,width:s.width||d.flowchart.wrappingWidth,classes:"markdown-node-label"},d):u.appendChild(b(h(o(f),d),s.labelStyle,!1,l));let m=w.getBBox();const k=s.padding/2;if(r(d.flowchart.htmlLabels)){const e=w.children[0],a=c(w),r=e.getElementsByTagName("img");if(r){const e=""===f.replace(/<img[^>]*>/g,"").trim();await Promise.all([...r].map((a=>new Promise((r=>{function i(){if(a.style.display="flex",a.style.flexDirection="column",e){const t=d.fontSize?d.fontSize:window.getComputedStyle(document.body).fontSize,e=5,r=parseInt(t,10)*e+"px";a.style.minWidth=r,a.style.maxWidth=r}else a.style.width="100%";r(a)}t(i,"setupImage"),setTimeout((()=>{a.complete&&i()})),a.addEventListener("error",i),a.addEventListener("load",i)})))))}m=e.getBoundingClientRect(),a.attr("width",m.width),a.attr("height",m.height)}return p?x.attr("transform","translate("+-m.width/2+", "+-m.height/2+")"):x.attr("transform","translate(0, "+-m.height/2+")"),s.centerLabel&&x.attr("transform","translate("+-m.width/2+", "+-m.height/2+")"),x.insert("rect",":first-child"),{shapeSvg:g,bbox:m,halfPadding:k,label:x}}),"labelHelper"),k=t(((t,e)=>{const a=e.node().getBBox();t.width=a.width,t.height=a.height}),"updateNodeBounds");function v(t,e,a,r){return t.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","label-container").attr("transform","translate("+-e/2+","+a/2+")")}t(v,"insertPolygonShape");var L=t((t=>{const e=new Set;for(const a of t)switch(a){case"x":e.add("right"),e.add("left");break;case"y":e.add("up"),e.add("down");break;default:e.add(a)}return e}),"expandAndDeduplicateDirections"),S=t(((t,e,a)=>{const r=L(t),i=e.height+2*a.padding,s=i/2,n=e.width+2*s+a.padding,l=a.padding/2;return r.has("right")&&r.has("left")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:s,y:0},{x:n/2,y:2*l},{x:n-s,y:0},{x:n,y:0},{x:n,y:-i/3},{x:n+2*l,y:-i/2},{x:n,y:-2*i/3},{x:n,y:-i},{x:n-s,y:-i},{x:n/2,y:-i-2*l},{x:s,y:-i},{x:0,y:-i},{x:0,y:-2*i/3},{x:-2*l,y:-i/2},{x:0,y:-i/3}]:r.has("right")&&r.has("left")&&r.has("up")?[{x:s,y:0},{x:n-s,y:0},{x:n,y:-i/2},{x:n-s,y:-i},{x:s,y:-i},{x:0,y:-i/2}]:r.has("right")&&r.has("left")&&r.has("down")?[{x:0,y:0},{x:s,y:-i},{x:n-s,y:-i},{x:n,y:0}]:r.has("right")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:n,y:-s},{x:n,y:-i+s},{x:0,y:-i}]:r.has("left")&&r.has("up")&&r.has("down")?[{x:n,y:0},{x:0,y:-s},{x:0,y:-i+s},{x:n,y:-i}]:r.has("right")&&r.has("left")?[{x:s,y:0},{x:s,y:-l},{x:n-s,y:-l},{x:n-s,y:0},{x:n,y:-i/2},{x:n-s,y:-i},{x:n-s,y:-i+l},{x:s,y:-i+l},{x:s,y:-i},{x:0,y:-i/2}]:r.has("up")&&r.has("down")?[{x:n/2,y:0},{x:0,y:-l},{x:s,y:-l},{x:s,y:-i+l},{x:0,y:-i+l},{x:n/2,y:-i},{x:n,y:-i+l},{x:n-s,y:-i+l},{x:n-s,y:-l},{x:n,y:-l}]:r.has("right")&&r.has("up")?[{x:0,y:0},{x:n,y:-s},{x:0,y:-i}]:r.has("right")&&r.has("down")?[{x:0,y:0},{x:n,y:0},{x:0,y:-i}]:r.has("left")&&r.has("up")?[{x:n,y:0},{x:0,y:-s},{x:n,y:-i}]:r.has("left")&&r.has("down")?[{x:n,y:0},{x:0,y:0},{x:n,y:-i}]:r.has("right")?[{x:s,y:-l},{x:s,y:-l},{x:n-s,y:-l},{x:n-s,y:0},{x:n,y:-i/2},{x:n-s,y:-i},{x:n-s,y:-i+l},{x:s,y:-i+l},{x:s,y:-i+l}]:r.has("left")?[{x:s,y:0},{x:s,y:-l},{x:n-s,y:-l},{x:n-s,y:-i+l},{x:s,y:-i+l},{x:s,y:-i},{x:0,y:-i/2}]:r.has("up")?[{x:s,y:-l},{x:s,y:-i+l},{x:0,y:-i+l},{x:n/2,y:-i},{x:n,y:-i+l},{x:n-s,y:-i+l},{x:n-s,y:-l}]:r.has("down")?[{x:n/2,y:0},{x:0,y:-l},{x:s,y:-l},{x:s,y:-i+l},{x:n-s,y:-i+l},{x:n-s,y:-l},{x:n,y:-l}]:[{x:0,y:0}]}),"getArrowPoints");function M(t,e){return t.intersect(e)}t(M,"intersectNode");var _=M;function B(t,e,a,r){var i=t.x,s=t.y,n=i-r.x,l=s-r.y,d=Math.sqrt(e*e*l*l+a*a*n*n),o=Math.abs(e*a*n/d);r.x<i&&(o=-o);var h=Math.abs(e*a*l/d);return r.y<s&&(h=-h),{x:i+o,y:s+h}}t(B,"intersectEllipse");var T=B;function C(t,e,a){return T(t,e,e,a)}t(C,"intersectCircle");var E=C;function $(t,e,a,r){var i,s,n,l,d,o,h,c,y,p,g,x,f;if(i=e.y-t.y,n=t.x-e.x,d=e.x*t.y-t.x*e.y,y=i*a.x+n*a.y+d,p=i*r.x+n*r.y+d,!(0!==y&&0!==p&&P(y,p)||(s=r.y-a.y,l=a.x-r.x,o=r.x*a.y-a.x*r.y,h=s*t.x+l*t.y+o,c=s*e.x+l*e.y+o,0!==h&&0!==c&&P(h,c)||0==(g=i*l-s*n))))return x=Math.abs(g/2),{x:(f=n*o-l*d)<0?(f-x)/g:(f+x)/g,y:(f=s*d-i*o)<0?(f-x)/g:(f+x)/g}}function P(t,e){return t*e>0}t($,"intersectLine"),t(P,"sameSign");var N=$,R=W;function W(t,e,a){var r=t.x,i=t.y,s=[],n=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY;"function"==typeof e.forEach?e.forEach((function(t){n=Math.min(n,t.x),l=Math.min(l,t.y)})):(n=Math.min(n,e.x),l=Math.min(l,e.y));for(var d=r-t.width/2-n,o=i-t.height/2-l,h=0;h<e.length;h++){var c=e[h],y=e[h<e.length-1?h+1:0],p=N(t,a,{x:d+c.x,y:o+c.y},{x:d+y.x,y:o+y.y});p&&s.push(p)}return s.length?(s.length>1&&s.sort((function(t,e){var r=t.x-a.x,i=t.y-a.y,s=Math.sqrt(r*r+i*i),n=e.x-a.x,l=e.y-a.y,d=Math.sqrt(n*n+l*l);return s<d?-1:s===d?0:1})),s[0]):t}t(W,"intersectPolygon");var H=t(((t,e)=>{var a,r,i=t.x,s=t.y,n=e.x-i,l=e.y-s,d=t.width/2,o=t.height/2;return Math.abs(l)*d>Math.abs(n)*o?(l<0&&(o=-o),a=0===l?0:o*n/l,r=o):(n<0&&(d=-d),a=d,r=0===n?0:d*l/n),{x:i+a,y:s+r}}),"intersectRect"),I={node:_,circle:E,ellipse:T,polygon:R,rect:H},Y=t((async(t,r)=>{r.useHtmlLabels||a().flowchart.htmlLabels||(r.centerLabel=!0);const{shapeSvg:i,bbox:s,halfPadding:n}=await m(t,r,"node "+r.classes,!0);e.info("Classes = ",r.classes);const l=i.insert("rect",":first-child");return l.attr("rx",r.rx).attr("ry",r.ry).attr("x",-s.width/2-n).attr("y",-s.height/2-n).attr("width",s.width+r.padding).attr("height",s.height+r.padding),k(r,l),r.intersect=function(t){return I.rect(r,t)},i}),"note"),D=t((t=>t?" "+t:""),"formatClass"),X=t(((t,e)=>`${e||"node default"}${D(t.classes)} ${D(t.class)}`),"getClassesFromNode"),j=t((async(t,a)=>{const{shapeSvg:r,bbox:i}=await m(t,a,X(a,void 0),!0),s=i.width+a.padding+(i.height+a.padding),n=[{x:s/2,y:0},{x:s,y:-s/2},{x:s/2,y:-s},{x:0,y:-s/2}];e.info("Question main (Circle)");const l=v(r,s,s,n);return l.attr("style",a.style),k(a,l),a.intersect=function(t){return e.warn("Intersect called"),I.polygon(a,n,t)},r}),"question"),U=t(((t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=[{x:0,y:14},{x:14,y:0},{x:0,y:-14},{x:-14,y:0}];return a.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","state-start").attr("r",7).attr("width",28).attr("height",28),e.width=28,e.height=28,e.intersect=function(t){return I.circle(e,14,t)},a}),"choice"),A=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.height+e.padding,s=i/4,n=r.width+2*s+e.padding,l=[{x:s,y:0},{x:n-s,y:0},{x:n,y:-i/2},{x:n-s,y:-i},{x:s,y:-i},{x:0,y:-i/2}],d=v(a,n,i,l);return d.attr("style",e.style),k(e,d),e.intersect=function(t){return I.polygon(e,l,t)},a}),"hexagon"),O=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,void 0,!0),i=r.height+2*e.padding,s=i/2,n=r.width+2*s+e.padding,l=S(e.directions,r,e),d=v(a,n,i,l);return d.attr("style",e.style),k(e,d),e.intersect=function(t){return I.polygon(e,l,t)},a}),"block_arrow"),z=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:-s/2,y:0},{x:i,y:0},{x:i,y:-s},{x:-s/2,y:-s},{x:0,y:-s/2}];return v(a,i,s,n).attr("style",e.style),e.width=i+s,e.height=s,e.intersect=function(t){return I.polygon(e,n,t)},a}),"rect_left_inv_arrow"),Z=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:-2*s/6,y:0},{x:i-s/6,y:0},{x:i+2*s/6,y:-s},{x:s/6,y:-s}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"lean_right"),q=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:2*s/6,y:0},{x:i+s/6,y:0},{x:i-2*s/6,y:-s},{x:-s/6,y:-s}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"lean_left"),V=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:-2*s/6,y:0},{x:i+2*s/6,y:0},{x:i-s/6,y:-s},{x:s/6,y:-s}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"trapezoid"),F=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:s/6,y:0},{x:i-s/6,y:0},{x:i+2*s/6,y:-s},{x:-2*s/6,y:-s}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"inv_trapezoid"),J=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:0,y:0},{x:i+s/2,y:0},{x:i,y:-s/2},{x:i+s/2,y:-s},{x:0,y:-s}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"rect_right_inv_arrow"),Q=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=i/2,n=s/(2.5+i/50),l=r.height+n+e.padding,d="M 0,"+n+" a "+s+","+n+" 0,0,0 "+i+" 0 a "+s+","+n+" 0,0,0 "+-i+" 0 l 0,"+l+" a "+s+","+n+" 0,0,0 "+i+" 0 l 0,"+-l,o=a.attr("label-offset-y",n).insert("path",":first-child").attr("style",e.style).attr("d",d).attr("transform","translate("+-i/2+","+-(l/2+n)+")");return k(e,o),e.intersect=function(t){const a=I.rect(e,t),r=a.x-e.x;if(0!=s&&(Math.abs(r)<e.width/2||Math.abs(r)==e.width/2&&Math.abs(a.y-e.y)>e.height/2-n)){let i=n*n*(1-r*r/(s*s));0!=i&&(i=Math.sqrt(i)),i=n-i,t.y-e.y>0&&(i=-i),a.y+=i}return a},a}),"cylinder"),G=t((async(t,a)=>{const{shapeSvg:r,bbox:i,halfPadding:s}=await m(t,a,"node "+a.classes+" "+a.class,!0),n=r.insert("rect",":first-child"),l=a.positioned?a.width:i.width+a.padding,d=a.positioned?a.height:i.height+a.padding,o=a.positioned?-l/2:-i.width/2-s,h=a.positioned?-d/2:-i.height/2-s;if(n.attr("class","basic label-container").attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("x",o).attr("y",h).attr("width",l).attr("height",d),a.props){const t=new Set(Object.keys(a.props));a.props.borders&&(et(n,a.props.borders,l,d),t.delete("borders")),t.forEach((t=>{e.warn(`Unknown node property ${t}`)}))}return k(a,n),a.intersect=function(t){return I.rect(a,t)},r}),"rect"),K=t((async(t,a)=>{const{shapeSvg:r,bbox:i,halfPadding:s}=await m(t,a,"node "+a.classes,!0),n=r.insert("rect",":first-child"),l=a.positioned?a.width:i.width+a.padding,d=a.positioned?a.height:i.height+a.padding,o=a.positioned?-l/2:-i.width/2-s,h=a.positioned?-d/2:-i.height/2-s;if(n.attr("class","basic cluster composite label-container").attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("x",o).attr("y",h).attr("width",l).attr("height",d),a.props){const t=new Set(Object.keys(a.props));a.props.borders&&(et(n,a.props.borders,l,d),t.delete("borders")),t.forEach((t=>{e.warn(`Unknown node property ${t}`)}))}return k(a,n),a.intersect=function(t){return I.rect(a,t)},r}),"composite"),tt=t((async(t,a)=>{const{shapeSvg:r}=await m(t,a,"label",!0);e.trace("Classes = ",a.class);const i=r.insert("rect",":first-child");if(i.attr("width",0).attr("height",0),r.attr("class","label edgeLabel"),a.props){const t=new Set(Object.keys(a.props));a.props.borders&&(et(i,a.props.borders,0,0),t.delete("borders")),t.forEach((t=>{e.warn(`Unknown node property ${t}`)}))}return k(a,i),a.intersect=function(t){return I.rect(a,t)},r}),"labelRect");function et(a,r,i,s){const n=[],l=t((t=>{n.push(t,0)}),"addBorder"),d=t((t=>{n.push(0,t)}),"skipBorder");r.includes("t")?(e.debug("add top border"),l(i)):d(i),r.includes("r")?(e.debug("add right border"),l(s)):d(s),r.includes("b")?(e.debug("add bottom border"),l(i)):d(i),r.includes("l")?(e.debug("add left border"),l(s)):d(s),a.attr("stroke-dasharray",n.join(" "))}t(et,"applyNodePropertyBorders");var at=t(((t,i)=>{let s;s=i.classes?"node "+i.classes:"node default";const n=t.insert("g").attr("class",s).attr("id",i.domId||i.id),l=n.insert("rect",":first-child"),d=n.insert("line"),o=n.insert("g").attr("class","label"),h=i.labelText.flat?i.labelText.flat():i.labelText;let y="";y="object"==typeof h?h[0]:h,e.info("Label text abc79",y,h,"object"==typeof h);const p=o.node().appendChild(b(y,i.labelStyle,!0,!0));let g={width:0,height:0};if(r(a().flowchart.htmlLabels)){const t=p.children[0],e=c(p);g=t.getBoundingClientRect(),e.attr("width",g.width),e.attr("height",g.height)}e.info("Text 2",h);const x=h.slice(1,h.length);let f=p.getBBox();const u=o.node().appendChild(b(x.join?x.join("<br/>"):x,i.labelStyle,!0,!0));if(r(a().flowchart.htmlLabels)){const t=u.children[0],e=c(u);g=t.getBoundingClientRect(),e.attr("width",g.width),e.attr("height",g.height)}const w=i.padding/2;return c(u).attr("transform","translate( "+(g.width>f.width?0:(f.width-g.width)/2)+", "+(f.height+w+5)+")"),c(p).attr("transform","translate( "+(g.width<f.width?0:-(f.width-g.width)/2)+", 0)"),g=o.node().getBBox(),o.attr("transform","translate("+-g.width/2+", "+(-g.height/2-w+3)+")"),l.attr("class","outer title-state").attr("x",-g.width/2-w).attr("y",-g.height/2-w).attr("width",g.width+i.padding).attr("height",g.height+i.padding),d.attr("class","divider").attr("x1",-g.width/2-w).attr("x2",g.width/2+w).attr("y1",-g.height/2-w+f.height+w).attr("y2",-g.height/2-w+f.height+w),k(i,l),i.intersect=function(t){return I.rect(i,t)},n}),"rectWithTitle"),rt=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.height+e.padding,s=r.width+i/4+e.padding,n=a.insert("rect",":first-child").attr("style",e.style).attr("rx",i/2).attr("ry",i/2).attr("x",-s/2).attr("y",-i/2).attr("width",s).attr("height",i);return k(e,n),e.intersect=function(t){return I.rect(e,t)},a}),"stadium"),it=t((async(t,a)=>{const{shapeSvg:r,bbox:i,halfPadding:s}=await m(t,a,X(a,void 0),!0),n=r.insert("circle",":first-child");return n.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",i.width/2+s).attr("width",i.width+a.padding).attr("height",i.height+a.padding),e.info("Circle main"),k(a,n),a.intersect=function(t){return e.info("Circle intersect",a,i.width/2+s,t),I.circle(a,i.width/2+s,t)},r}),"circle"),st=t((async(t,a)=>{const{shapeSvg:r,bbox:i,halfPadding:s}=await m(t,a,X(a,void 0),!0),n=r.insert("g",":first-child"),l=n.insert("circle"),d=n.insert("circle");return n.attr("class",a.class),l.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",i.width/2+s+5).attr("width",i.width+a.padding+10).attr("height",i.height+a.padding+10),d.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",i.width/2+s).attr("width",i.width+a.padding).attr("height",i.height+a.padding),e.info("DoubleCircle main"),k(a,l),a.intersect=function(t){return e.info("DoubleCircle intersect",a,i.width/2+s+5,t),I.circle(a,i.width/2+s+5,t)},r}),"doublecircle"),nt=t((async(t,e)=>{const{shapeSvg:a,bbox:r}=await m(t,e,X(e,void 0),!0),i=r.width+e.padding,s=r.height+e.padding,n=[{x:0,y:0},{x:i,y:0},{x:i,y:-s},{x:0,y:-s},{x:0,y:0},{x:-8,y:0},{x:i+8,y:0},{x:i+8,y:-s},{x:-8,y:-s},{x:-8,y:0}],l=v(a,i,s,n);return l.attr("style",e.style),k(e,l),e.intersect=function(t){return I.polygon(e,n,t)},a}),"subroutine"),lt=t(((t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child");return r.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),k(e,r),e.intersect=function(t){return I.circle(e,7,t)},a}),"start"),dt=t(((t,e,a)=>{const r=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);let i=70,s=10;"LR"===a&&(i=10,s=70);const n=r.append("rect").attr("x",-1*i/2).attr("y",-1*s/2).attr("width",i).attr("height",s).attr("class","fork-join");return k(e,n),e.height=e.height+e.padding/2,e.width=e.width+e.padding/2,e.intersect=function(t){return I.rect(e,t)},r}),"forkJoin"),ot={rhombus:j,composite:K,question:j,rect:G,labelRect:tt,rectWithTitle:at,choice:U,circle:it,doublecircle:st,stadium:rt,hexagon:A,block_arrow:O,rect_left_inv_arrow:z,lean_right:Z,lean_left:q,trapezoid:V,inv_trapezoid:F,rect_right_inv_arrow:J,cylinder:Q,start:lt,end:t(((t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child"),i=a.insert("circle",":first-child");return i.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),r.attr("class","state-end").attr("r",5).attr("width",10).attr("height",10),k(e,i),e.intersect=function(t){return I.circle(e,7,t)},a}),"end"),note:Y,subroutine:nt,fork:dt,join:dt,class_box:t(((t,e)=>{var i;const s=e.padding/2;let n;n=e.classes?"node "+e.classes:"node default";const l=t.insert("g").attr("class",n).attr("id",e.domId||e.id),d=l.insert("rect",":first-child"),o=l.insert("line"),h=l.insert("line");let y=0,p=4;const g=l.insert("g").attr("class","label");let x=0;const f=null==(i=e.classData.annotations)?void 0:i[0],u=e.classData.annotations[0]?"«"+e.classData.annotations[0]+"»":"",w=g.node().appendChild(b(u,e.labelStyle,!0,!0));let m=w.getBBox();if(r(a().flowchart.htmlLabels)){const t=w.children[0],e=c(w);m=t.getBoundingClientRect(),e.attr("width",m.width),e.attr("height",m.height)}e.classData.annotations[0]&&(p+=m.height+4,y+=m.width);let v=e.classData.label;void 0!==e.classData.type&&""!==e.classData.type&&(a().flowchart.htmlLabels?v+="&lt;"+e.classData.type+"&gt;":v+="<"+e.classData.type+">");const L=g.node().appendChild(b(v,e.labelStyle,!0,!0));c(L).attr("class","classTitle");let S=L.getBBox();if(r(a().flowchart.htmlLabels)){const t=L.children[0],e=c(L);S=t.getBoundingClientRect(),e.attr("width",S.width),e.attr("height",S.height)}p+=S.height+4,S.width>y&&(y=S.width);const M=[];e.classData.members.forEach((t=>{const i=t.getDisplayDetails();let s=i.displayText;a().flowchart.htmlLabels&&(s=s.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const n=g.node().appendChild(b(s,i.cssStyle?i.cssStyle:e.labelStyle,!0,!0));let l=n.getBBox();if(r(a().flowchart.htmlLabels)){const t=n.children[0],e=c(n);l=t.getBoundingClientRect(),e.attr("width",l.width),e.attr("height",l.height)}l.width>y&&(y=l.width),p+=l.height+4,M.push(n)})),p+=8;const _=[];if(e.classData.methods.forEach((t=>{const i=t.getDisplayDetails();let s=i.displayText;a().flowchart.htmlLabels&&(s=s.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const n=g.node().appendChild(b(s,i.cssStyle?i.cssStyle:e.labelStyle,!0,!0));let l=n.getBBox();if(r(a().flowchart.htmlLabels)){const t=n.children[0],e=c(n);l=t.getBoundingClientRect(),e.attr("width",l.width),e.attr("height",l.height)}l.width>y&&(y=l.width),p+=l.height+4,_.push(n)})),p+=8,f){let t=(y-m.width)/2;c(w).attr("transform","translate( "+(-1*y/2+t)+", "+-1*p/2+")"),x=m.height+4}let B=(y-S.width)/2;return c(L).attr("transform","translate( "+(-1*y/2+B)+", "+(-1*p/2+x)+")"),x+=S.height+4,o.attr("class","divider").attr("x1",-y/2-s).attr("x2",y/2+s).attr("y1",-p/2-s+8+x).attr("y2",-p/2-s+8+x),x+=8,M.forEach((t=>{c(t).attr("transform","translate( "+-y/2+", "+(-1*p/2+x+4)+")");const e=null==t?void 0:t.getBBox();x+=((null==e?void 0:e.height)??0)+4})),x+=8,h.attr("class","divider").attr("x1",-y/2-s).attr("x2",y/2+s).attr("y1",-p/2-s+8+x).attr("y2",-p/2-s+8+x),x+=8,_.forEach((t=>{c(t).attr("transform","translate( "+-y/2+", "+(-1*p/2+x)+")");const e=null==t?void 0:t.getBBox();x+=((null==e?void 0:e.height)??0)+4})),d.attr("style",e.style).attr("class","outer title-state").attr("x",-y/2-s).attr("y",-p/2-s).attr("width",y+e.padding).attr("height",p+e.padding),k(e,d),e.intersect=function(t){return I.rect(e,t)},l}),"class_box")},ht={},ct=t((async(t,e,r)=>{let i,s;if(e.link){let n;"sandbox"===a().securityLevel?n="_top":e.linkTarget&&(n=e.linkTarget||"_blank"),i=t.insert("svg:a").attr("xlink:href",e.link).attr("target",n),s=await ot[e.shape](i,e,r)}else s=await ot[e.shape](t,e,r),i=s;return e.tooltip&&s.attr("title",e.tooltip),e.class&&s.attr("class","node default "+e.class),ht[e.id]=i,e.haveCallback&&ht[e.id].attr("class",ht[e.id].attr("class")+" clickable"),i}),"insertNode"),yt=t(((t,e)=>{ht[e.id]=t}),"setNodeElem"),pt=t((()=>{ht={}}),"clear"),gt=t((t=>{const a=ht[t.id];e.trace("Transforming node",t.diff,t,"translate("+(t.x-t.width/2-5)+", "+t.width/2+")");const r=t.diff||0;return t.clusterNode?a.attr("transform","translate("+(t.x+r-t.width/2)+", "+(t.y-t.height/2-8)+")"):a.attr("transform","translate("+t.x+", "+t.y+")"),r}),"positionNode"),xt=t(((t,e,a,r,i)=>{e.arrowTypeStart&&ut(t,"start",e.arrowTypeStart,a,r,i),e.arrowTypeEnd&&ut(t,"end",e.arrowTypeEnd,a,r,i)}),"addEdgeMarkers"),ft={arrow_cross:"cross",arrow_point:"point",arrow_barb:"barb",arrow_circle:"circle",aggregation:"aggregation",extension:"extension",composition:"composition",dependency:"dependency",lollipop:"lollipop"},ut=t(((t,a,r,i,s,n)=>{const l=ft[r];if(!l)return void e.warn(`Unknown arrow type: ${r}`);const d="start"===a?"Start":"End";t.attr(`marker-${a}`,`url(${i}#${s}_${n}-${l}${d})`)}),"addEdgeMarker"),wt={},bt={},mt=t((()=>{wt={},bt={}}),"clear"),kt=t(((t,e)=>{const s=a(),n=r(s.flowchart.htmlLabels),l="markdown"===e.labelType?i(t,e.label,{style:e.labelStyle,useHtmlLabels:n,addSvgBackground:!0},s):b(e.label,e.labelStyle),d=t.insert("g").attr("class","edgeLabel"),o=d.insert("g").attr("class","label");o.node().appendChild(l);let h,y=l.getBBox();if(n){const t=l.children[0],e=c(l);y=t.getBoundingClientRect(),e.attr("width",y.width),e.attr("height",y.height)}if(o.attr("transform","translate("+-y.width/2+", "+-y.height/2+")"),wt[e.id]=d,e.width=y.width,e.height=y.height,e.startLabelLeft){const a=b(e.startLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),i=r.insert("g").attr("class","inner");h=i.node().appendChild(a);const s=a.getBBox();i.attr("transform","translate("+-s.width/2+", "+-s.height/2+")"),bt[e.id]||(bt[e.id]={}),bt[e.id].startLeft=r,vt(h,e.startLabelLeft)}if(e.startLabelRight){const a=b(e.startLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),i=r.insert("g").attr("class","inner");h=r.node().appendChild(a),i.node().appendChild(a);const s=a.getBBox();i.attr("transform","translate("+-s.width/2+", "+-s.height/2+")"),bt[e.id]||(bt[e.id]={}),bt[e.id].startRight=r,vt(h,e.startLabelRight)}if(e.endLabelLeft){const a=b(e.endLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),i=r.insert("g").attr("class","inner");h=i.node().appendChild(a);const s=a.getBBox();i.attr("transform","translate("+-s.width/2+", "+-s.height/2+")"),r.node().appendChild(a),bt[e.id]||(bt[e.id]={}),bt[e.id].endLeft=r,vt(h,e.endLabelLeft)}if(e.endLabelRight){const a=b(e.endLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),i=r.insert("g").attr("class","inner");h=i.node().appendChild(a);const s=a.getBBox();i.attr("transform","translate("+-s.width/2+", "+-s.height/2+")"),r.node().appendChild(a),bt[e.id]||(bt[e.id]={}),bt[e.id].endRight=r,vt(h,e.endLabelRight)}return l}),"insertEdgeLabel");function vt(t,e){a().flowchart.htmlLabels&&t&&(t.style.width=9*e.length+"px",t.style.height="12px")}t(vt,"setTerminalWidth");var Lt=t(((t,r)=>{e.debug("Moving label abc88 ",t.id,t.label,wt[t.id],r);let i=r.updatedPath?r.updatedPath:r.originalPath;const l=a(),{subGraphTitleTotalMargin:d}=s(l);if(t.label){const a=wt[t.id];let s=t.x,l=t.y;if(i){const a=n.calcLabelPosition(i);e.debug("Moving label "+t.label+" from (",s,",",l,") to (",a.x,",",a.y,") abc88"),r.updatedPath&&(s=a.x,l=a.y)}a.attr("transform",`translate(${s}, ${l+d/2})`)}if(t.startLabelLeft){const e=bt[t.id].startLeft;let a=t.x,r=t.y;if(i){const e=n.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_left",i);a=e.x,r=e.y}e.attr("transform",`translate(${a}, ${r})`)}if(t.startLabelRight){const e=bt[t.id].startRight;let a=t.x,r=t.y;if(i){const e=n.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_right",i);a=e.x,r=e.y}e.attr("transform",`translate(${a}, ${r})`)}if(t.endLabelLeft){const e=bt[t.id].endLeft;let a=t.x,r=t.y;if(i){const e=n.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_left",i);a=e.x,r=e.y}e.attr("transform",`translate(${a}, ${r})`)}if(t.endLabelRight){const e=bt[t.id].endRight;let a=t.x,r=t.y;if(i){const e=n.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_right",i);a=e.x,r=e.y}e.attr("transform",`translate(${a}, ${r})`)}}),"positionEdgeLabel"),St=t(((t,e)=>{const a=t.x,r=t.y,i=Math.abs(e.x-a),s=Math.abs(e.y-r),n=t.width/2,l=t.height/2;return i>=n||s>=l}),"outsideNode"),Mt=t(((t,a,r)=>{e.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(a)}\n  insidePoint : ${JSON.stringify(r)}\n  node        : x:${t.x} y:${t.y} w:${t.width} h:${t.height}`);const i=t.x,s=t.y,n=Math.abs(i-r.x),l=t.width/2;let d=r.x<a.x?l-n:l+n;const o=t.height/2,h=Math.abs(a.y-r.y),c=Math.abs(a.x-r.x);if(Math.abs(s-a.y)*l>Math.abs(i-a.x)*o){let t=r.y<a.y?a.y-o-s:s-o-a.y;d=c*t/h;const i={x:r.x<a.x?r.x+d:r.x-c+d,y:r.y<a.y?r.y+h-t:r.y-h+t};return 0===d&&(i.x=a.x,i.y=a.y),0===c&&(i.x=a.x),0===h&&(i.y=a.y),e.debug(`abc89 topp/bott calc, Q ${h}, q ${t}, R ${c}, r ${d}`,i),i}{d=r.x<a.x?a.x-l-i:i-l-a.x;let t=h*d/c,s=r.x<a.x?r.x+c-d:r.x-c+d,n=r.y<a.y?r.y+t:r.y-t;return e.debug(`sides calc abc89, Q ${h}, q ${t}, R ${c}, r ${d}`,{_x:s,_y:n}),0===d&&(s=a.x,n=a.y),0===c&&(s=a.x),0===h&&(n=a.y),{x:s,y:n}}}),"intersection"),_t=t(((t,a)=>{e.debug("abc88 cutPathAtIntersect",t,a);let r=[],i=t[0],s=!1;return t.forEach((t=>{if(St(a,t)||s)i=t,s||r.push(t);else{const e=Mt(a,i,t);let n=!1;r.forEach((t=>{n=n||t.x===e.x&&t.y===e.y})),r.some((t=>t.x===e.x&&t.y===e.y))||r.push(e),s=!0}})),r}),"cutPathAtIntersect"),Bt=t((function(t,r,i,s,n,d,o){let h=i.points;e.debug("abc88 InsertEdge: edge=",i,"e=",r);let c=!1;const g=d.node(r.v);var x=d.node(r.w);(null==x?void 0:x.intersect)&&(null==g?void 0:g.intersect)&&(h=h.slice(1,i.points.length-1),h.unshift(g.intersect(h[0])),h.push(x.intersect(h[h.length-1]))),i.toCluster&&(e.debug("to cluster abc88",s[i.toCluster]),h=_t(i.points,s[i.toCluster].node),c=!0),i.fromCluster&&(e.debug("from cluster abc88",s[i.fromCluster]),h=_t(h.reverse(),s[i.fromCluster].node).reverse(),c=!0);const f=h.filter((t=>!Number.isNaN(t.y)));let u=p;!i.curve||"graph"!==n&&"flowchart"!==n||(u=i.curve);const{x:w,y:b}=l(i),m=y().x(w).y(b).curve(u);let k;switch(i.thickness){case"normal":k="edge-thickness-normal";break;case"thick":case"invisible":k="edge-thickness-thick";break;default:k=""}switch(i.pattern){case"solid":k+=" edge-pattern-solid";break;case"dotted":k+=" edge-pattern-dotted";break;case"dashed":k+=" edge-pattern-dashed"}const v=t.append("path").attr("d",m(f)).attr("id",i.id).attr("class"," "+k+(i.classes?" "+i.classes:"")).attr("style",i.style);let L="";(a().flowchart.arrowMarkerAbsolute||a().state.arrowMarkerAbsolute)&&(L=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,L=L.replace(/\(/g,"\\("),L=L.replace(/\)/g,"\\)")),xt(v,i,L,o,n);let S={};return c&&(S.updatedPath=h),S.originalPath=i.points,S}),"insertEdge");export{mt as a,kt as b,pt as c,Bt as d,Lt as e,b as f,H as g,ct as i,f as m,gt as p,yt as s,k as u};
