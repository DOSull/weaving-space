import{_ as r,l as s,I as t,d as e,K as a}from"./mermaid-BjrOZY3C.js";import{p as o}from"./radar-MK3ICKWK-D3Qw29v6.js";import"./index-B2CDK72T.js";import"./transform-DjHZbYKP.js";import"./timer-DFzT7np-.js";import"./step-5BjdtTEt.js";import"./_baseEach-BSQQBNxS.js";import"./_baseUniq-B68cZmT6.js";import"./min-BimQyIoF.js";import"./_baseMap-D_BQVY78.js";import"./clone-CWF8SqgC.js";import"./_createAggregator-C-KnW8O_.js";var i={parse:r((async r=>{const t=await o("info",r);s.debug(t)}),"parse")},n={version:a.version},p={parser:i,db:{getVersion:r((()=>n.version),"getVersion")},renderer:{draw:r(((r,a,o)=>{s.debug("rendering info diagram\n"+r);const i=t(a);e(i,100,400,!0);i.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${o}`)}),"draw")}};export{p as diagram};
